#!/bin/sh

current_tag=$(git describe --tags --abbrev=0 2> /dev/null )

if [ $? -eq 0 ] ; then
  # UPDATE VERSION FILE
  #
  # Updates the version file using the branch's tag as an indicator
  #

  echo -n "${current_tag}" > version.info ;
  git add version.info

  # UPDATE EXAMPLE CODE
  #
  # Since differently named files such as 'python.exe' or 'activate.fish' may be run, it's possible to put the whole
  # path to them inside 'executioner.custom' and 'activator.custom' respectively to run them on your PC.
  # This will be ignored thanks to .gitignore.
  #

  python3_exe=$( find "venv" -type f -name "python" )
  if [ -s ".custom_git_hooks/executioner.custom" ] ; then python3_exe=$( cat ".custom_git_hooks/executioner.custom" ); fi
  if [ ! -f "$python3_exe" ] ; then echo "No python executable in your virtual environment, exiting" ; exit 2; fi

  activator_exe=$( find "venv" -type f -name "activate" )
  if [ -s ".custom_git_hooks/activator.custom" ] ; then activator_exe=$( cat ".custom_git_hooks/activator.custom" ); fi
  if [ ! -f "$activator_exe" ] ; then echo "No activate script in your virtual environment, exiting" ; exit 2 ; fi


  . "${activator_exe}" # activate

  for file in $( cd example_whenever_codes && ls | grep "\.txt" ) ; do
    source="example_whenever_codes/${file}"
    target="example_whenever_codes/to_c/$( basename ${file%.*} ).c"
    ${python3_exe} main.py c "${source}" "${target}" > /dev/null 2>&1
    if [ $? -ne 0 ] ; then echo "There was an error compiling '${source}', exiting " ; exit 3 ; fi
    git add "${target}"
  done

  echo "All checked"

else
  echo "NO TAGS, TAGS REQUIRED FOR COMMIT" ;
  exit 1
fi